# VARIABLES
-----------

* Introduction to Variables
---------------------------
	The "Hello World!" program simply writes to the screen. It does not read anything, calculate anything, or allow for user input. That’s no fun!

	Real programs tend to produce results based on some input that the user of the program gives, rather than just outputting the same thing every time.

	To read something from the keyboard, we first need somewhere in the computer’s memory to store data. That is where variables come in.

	A variable is simply a name that represents a particular piece of your computer’s memory that has been set aside for you to store, retrieve, and use data.

	In this lesson, we will learn about some of the basic data types:

		. int: integer numbers

		. double: floating-point numbers

		. char: individual characters

		. string: a sequence of characters

		. bool: true/false values

	Every variable has a type, which represents the kind of information you can store inside of it. It tells your compiler how much memory to set aside for the variable, and it 
	defines what you can do with the variable.

					Type				Usage				Examples
					----				-----				--------
					int				integer numbers			0
													420

					double				floating-point numbers		3.14
													-200.0

					char				characters			'a'
													'@'

					string				sequence of characters		"Hello World!"
													"Codecademy"

					bool				truth values			true
													false

==================================================================================================================================================================

* Step 1: Declare a Variable
----------------------------
	"Every variable in C++ must be declared before it can be used!"

	Suppose we are building a game and we want to keep track of a player’s score that goes from 0 to 10. We need a variable!

	Before we can use a variable, we must declare, or create, it. To declare a variable, we need to provide two things:

		. A type for the variable.
		. A name for the variable.
	
	So to declare an integer variable called score, we need to write:

		int score;

		. The int is the type of the variable.

		. The score is the name of the variable.

		. The ; is how we end a statement.

	In C++, variable names consist only of upper/lower case letters, digits, and/or underscores.

	Note: C++ is known as a strongly typed language. If you try to assign a value of one type to a variable that is a different type, you may get unexpected results, warnings, or 
	errors.

variable.cpp
------------
#include <iostream>

int main() 
{

  // Declare a variable
  int year;
  
}

==================================================================================================================================================================

* Step 2: Initialize a Variable
-------------------------------
	After we declare a variable, we can give it a value!

	Suppose that we have declared an int variable called score, to set it to 0, we can simply write:

		score = 0;

	. The score is the name of the variable.

	. The = indicates assignment.

	. The 0 is the value you want to store inside the variable.

	Note: In C++, a single equal sign = does not really mean “equal”. It means “assign”. In the code above, we are assigning the score variable a value of 0.				

variable.cpp
------------
#include <iostream>

int main() {
  
  // Declare a variable   
  int year;
  
  // Initialize a variable
  year = 2019;
   
}

==================================================================================================================================================================

* Combining Step 1 and Step 2
-----------------------------
	We can both declare and assign a value to a variable in a single initialization statement.

	Suppose we have these two lines:

		// Declare a variable
		int score;
 
		// Initialize a variable
		score = 0;

	We can actually combine these two lines into a single line of code:

		int score = 0;

	This means we are declaring an integer called score and setting it equal to 0.

	Note: We only need to declare a variable one time! And it is highly suggested to initialize a variable before using it later.

variable.cpp
------------
#include <iostream>

int main() {

   int score = 0;
   
   // Declare and initialize a variable here
   int year = 2019;
   
   return 0;
   
}

==================================================================================================================================================================

* Arithmetic Operators
----------------------
	Computers are incredible at doing calculations. Now that we have declared variables, let’s use them with arithmetic operators to calculate things!

	Here are some arithmetic operators:

		. + addition
		. - subtraction
		. * multiplication
		. / division
		. % modulo (divides and gives the remainder)

	For example:

		int score = 0;
		// score is 0
 
		score = 4 + 2;
		// it is now 6
 
		score = 4 - 2;
		// it is now 2
 
		score = 4 * 2;
		// it is now 8
 
		score = 4 / 2;
		// and now 2
 
		score = 5 % 2;
		// and now 1

	Note: The order of operations can be specified using parentheses. For example, the use of parentheses in score = 5 * (4 + 3) sets score equal to 5 * 7 rather than 20 + 3.

math.cpp
--------
#include <iostream>

int main() {

  int score = 0;

  // Change score here:
  score = 1234 * 99;

  std::cout << score << "\n";
  
}

==================================================================================================================================================================



















