# PROJECT 
---------

* Quadratic Formula
-------------------
	In algebra, a quadratic equation is an equation having the form:

		ax 2+bx+c=0

	Graphing, we get the curve below:

	The corresponding x values are the x-intercepts of the graph, while a, b, and c are constants.

	Write a C++ program called quadratic.cpp that solves the quadratic equation for the x‘s:

	If you get stuck during this project or would like to see an experienced developer work through it, click Get Unstuck to see a project walkthrough.

	Getting the a, b, c:
	--------------------
	1.
	First things first, let’s declare 3 variables:

		. a for the number a

		. b for the number b

		. c for the number c

	They should be able to hold decimal numbers.


	Hint
	The data type here should be double (not int).

	You can declare three double variables like so:

		double a;
		double b;
		double c;

	If you want to do this on the same line:

		double a, b, c;

	2.
	Output this prompt for the user:

		Enter a:

	And let the user type something and save that into variable a.


	Hint
		std::cout << "Enter a: ";
		std::cin >> a;

	3.
	Do the same for variable b and variable c.


	Hint
		std::cout << "Enter b: ";
		std::cin >> b;
 
		std::cout << "Enter c: ";
		std::cin >> c;
	Solving for the roots:

	4.
	Let’s declare two variables to store the roots:

		root1 for root number one
		root2 for root number two

	Hint
	The data type here should be double instead of int.

	You can declare two double variables like so:

		double root1;
		double root2;

	If you want to do this on the same line:

		double root1, root2;

	5.
	There are two roots here:

		For root1, the equation has a + sign:

	Use C++ math operators to solve for root1.

	Note: You can use std::sqrt() to get a number’s square root.

	std::sqrt() is a built-in C++ function you gain access to by including the <cmath> library at the top of the file. For example, std::sqrt(9) would be 3.

	We’ll explain that all later.


		Hint
		// The positive root
		root1 = (-b + std::sqrt(b*b - 4*a*c)) / (2*a);

	6.
	For root2, it’s almost identical but the equation has a - sign:


	Hint
		// The negative root
		root2 = (-b - std::sqrt(b*b - 4*a*c)) / (2*a);

	7.
	Let’s output these values using std::cout!


	Hint
		// Outputting the roots
		std::cout << "Root 1 is " << root1 << "\n";
		std::cout << "Root 2 is " << root2 << "\n";

	8.
	Compile and execute using the terminal.

	And plug in 6, -7, -3 for a, b, and c:

		Enter a: 6
		Enter b: -7
		Enter c: -3
		Root 1 is 1.5
		Root 2 is -0.333333

	Or try 3, -11, -4 for a, b, and c:

		Enter a: 3
		Enter b: -11
		Enter c: -4
		Root 1 is 4
		Root 2 is -0.333333

	Did you get the right roots?


	Hint
	Compile:

		g++ quadratic.cpp

	Execute:

		./a.out

	Sometimes, you might get nan and it means not-a-number! This is because in your equation, you are square rooting a negative number!

	Optional:
	---------
	9.
	Sample solution(s):

		quadratic.cpp
	P.S. If you make something cool, share it with us!